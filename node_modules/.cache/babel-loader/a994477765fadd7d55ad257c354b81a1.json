{"ast":null,"code":"var _jsxFileName = \"/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/components/compensation/CompensationConfiguration.jsx\";\nimport React from 'react';\nimport { Slider, PageHeader, Row, Col, Divider, Typography, Card, Button } from 'antd';\nimport numberWithCommas from '../../tools/numbersWithCommas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Paragraph\n} = Typography;\nconst SECTION_HEADER_CLASSNAME = 'section-header';\n\nconst CompensationSlider = props => {\n  const {\n    min,\n    max,\n    defaultValue,\n    updateValue,\n    sliderColor\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Slider, {\n    defaultValue: defaultValue,\n    min: min,\n    max: max,\n    onChange: updateValue,\n    trackStyle: {\n      backgroundColor: sliderColor\n    } // TODO: currently box shadow (ring around handle) is still default blue.\n    // Figure out code to change this.\n    ,\n    handleStyle: {\n      borderColor: sliderColor\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CompensationSlider;\n\nconst SliderLayout = props => {\n  // slider properties is an array of maps with the format\n  // [{\n  //     title, value, min, max, updateValue, sliderColor\n  // }]\n  const {\n    sliderProperties\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    gutter: [8, 8],\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      style: {\n        textAlign: 'right',\n        whiteSpace: 'nowrap'\n      },\n      span: 4,\n      children: sliderProperties.map((sliderProps, idx) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: sliderProps.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), idx + 1 !== sliderProperties.length ? /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 52\n        }, this) : null]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      type: \"vertical\",\n      style: {\n        height: 'auto'\n      },\n      span: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: sliderProperties.map((sliderProps, idx) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: sliderProps.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), idx + 1 !== sliderProperties.length ? /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 52\n        }, this) : null]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      span: 10,\n      children: sliderProperties.map((sliderProps, idx) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CompensationSlider, {\n          defaultValue: sliderProps.defaultValue ? sliderProps.defaultValue : 0,\n          min: sliderProps.min,\n          max: sliderProps.max,\n          updateValue: sliderProps.updateValue,\n          sliderColor: sliderProps.sliderColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), idx + 1 !== sliderProperties.length ? /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 52\n        }, this) : null]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SliderLayout;\n\nconst CompensationConfiguration = props => {\n  const {\n    base,\n    bonus,\n    updateBaseRate,\n    updateBonusRate,\n    baseColor,\n    bonusColor,\n    savingsColor,\n    retirementColor,\n    savingsPercentage,\n    retirementPercentage,\n    updateSavingsPercentage,\n    updateRetirementPercentage\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      className: SECTION_HEADER_CLASSNAME,\n      title: \"Configuration\",\n      subTitle: \"Set compensation projections for a better view of your finances.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: 'inherit'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Growth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        children: \"Add your growth expectations. Each slider represents your projected yearly growth by percentage.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SliderLayout, {\n        sliderProperties: [{\n          title: 'Base Salary',\n          min: 0,\n          max: 50,\n          value: `$${numberWithCommas(base)}`,\n          updateValue: updateBaseRate,\n          sliderColor: baseColor\n        }, {\n          title: 'Annual Bonus',\n          min: 0,\n          max: 50,\n          value: `$${numberWithCommas(bonus)}`,\n          updateValue: updateBonusRate,\n          sliderColor: bonusColor\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: 'inherit'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Allocation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        children: \"How do you expect to partition your earnings?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        children: \"Adjust the savings and retirement rate sliders to change what percentage of your total earnings you expect to allocate.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SliderLayout, {\n        sliderProperties: [{\n          title: 'Savings Rate',\n          min: 0,\n          max: 100,\n          value: `${numberWithCommas(savingsPercentage)}%`,\n          updateValue: updateSavingsPercentage,\n          sliderColor: savingsColor,\n          defaultValue: savingsPercentage\n        }, {\n          title: 'Retirement Rate',\n          min: 0,\n          max: 10,\n          value: `${numberWithCommas(retirementPercentage)}%`,\n          updateValue: updateRetirementPercentage,\n          sliderColor: retirementColor,\n          defaultValue: retirementPercentage\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      style: {\n        background: 'red',\n        borderColor: 'red'\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      style: {\n        background: 'grey',\n        borderColor: 'grey'\n      },\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        background: 'grey',\n        borderColor: 'grey'\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = CompensationConfiguration;\nexport default CompensationConfiguration;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CompensationSlider\");\n$RefreshReg$(_c2, \"SliderLayout\");\n$RefreshReg$(_c3, \"CompensationConfiguration\");","map":{"version":3,"sources":["/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/components/compensation/CompensationConfiguration.jsx"],"names":["React","Slider","PageHeader","Row","Col","Divider","Typography","Card","Button","numberWithCommas","Paragraph","SECTION_HEADER_CLASSNAME","CompensationSlider","props","min","max","defaultValue","updateValue","sliderColor","backgroundColor","borderColor","SliderLayout","sliderProperties","textAlign","whiteSpace","map","sliderProps","idx","title","length","height","value","CompensationConfiguration","base","bonus","updateBaseRate","updateBonusRate","baseColor","bonusColor","savingsColor","retirementColor","savingsPercentage","retirementPercentage","updateSavingsPercentage","updateRetirementPercentage","background"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Slider, PageHeader, Row, Col, Divider, Typography, Card, Button,\n} from 'antd';\nimport numberWithCommas from '../../tools/numbersWithCommas';\n\nconst { Paragraph } = Typography;\n\nconst SECTION_HEADER_CLASSNAME = 'section-header';\n\nconst CompensationSlider = (props) => {\n  const {\n    min,\n    max,\n    defaultValue,\n    updateValue,\n    sliderColor,\n  } = props;\n\n  return (\n    <Slider\n      defaultValue={defaultValue}\n      min={min}\n      max={max}\n      onChange={updateValue}\n      trackStyle={{ backgroundColor: sliderColor }}\n          // TODO: currently box shadow (ring around handle) is still default blue.\n          // Figure out code to change this.\n      handleStyle={{ borderColor: sliderColor }}\n    />\n  );\n};\n\nconst SliderLayout = (props) => {\n  // slider properties is an array of maps with the format\n  // [{\n  //     title, value, min, max, updateValue, sliderColor\n  // }]\n  const { sliderProperties } = props;\n  return (\n    <Row gutter={[8, 8]}>\n      <Col style={{ textAlign: 'right', whiteSpace: 'nowrap' }} span={4}>\n        {sliderProperties.map((sliderProps, idx) => (\n          <>\n            <h1>{sliderProps.title}</h1>\n            {idx + 1 !== sliderProperties.length ? <br /> : null}\n          </>\n        ))}\n      </Col>\n      <Divider type='vertical' style={{ height: 'auto' }} span={6} />\n      <Col>\n        {sliderProperties.map((sliderProps, idx) => (\n          <>\n            <h1>{sliderProps.value}</h1>\n            {idx + 1 !== sliderProperties.length ? <br /> : null}\n          </>\n        ))}\n      </Col>\n      <Col span={10}>\n        {sliderProperties.map((sliderProps, idx) => (\n          <>\n            <CompensationSlider\n              defaultValue={sliderProps.defaultValue ? sliderProps.defaultValue : 0}\n              min={sliderProps.min}\n              max={sliderProps.max}\n              updateValue={sliderProps.updateValue}\n              sliderColor={sliderProps.sliderColor}\n            />\n            {idx + 1 !== sliderProperties.length ? <br /> : null}\n          </>\n        ))}\n      </Col>\n    </Row>\n  );\n};\n\nconst CompensationConfiguration = (props) => {\n  const {\n    base,\n    bonus,\n    updateBaseRate,\n    updateBonusRate,\n    baseColor,\n    bonusColor,\n    savingsColor,\n    retirementColor,\n    savingsPercentage,\n    retirementPercentage,\n    updateSavingsPercentage,\n    updateRetirementPercentage,\n  } = props;\n\n  return (\n    <>\n      <PageHeader\n        className={SECTION_HEADER_CLASSNAME}\n        title='Configuration'\n        subTitle='Set compensation projections for a better view of your finances.'\n      />\n      <Card style={{ backgroundColor: 'inherit' }}>\n        <h1>Growth</h1>\n        <Paragraph>\n          Add your growth expectations.\n          Each slider represents your projected yearly growth by percentage.\n        </Paragraph>\n        <SliderLayout\n          sliderProperties={[{\n            title: 'Base Salary',\n            min: 0,\n            max: 50,\n            value: `$${numberWithCommas(base)}`,\n            updateValue: updateBaseRate,\n            sliderColor: baseColor,\n          },\n          {\n            title: 'Annual Bonus',\n            min: 0,\n            max: 50,\n            value: `$${numberWithCommas(bonus)}`,\n            updateValue: updateBonusRate,\n            sliderColor: bonusColor,\n          },\n          ]}\n        />\n      </Card>\n      <Card style={{ backgroundColor: 'inherit' }}>\n        <h1>Allocation</h1>\n        <Paragraph>How do you expect to partition your earnings?</Paragraph>\n        {/* TODO: TURN THIS INTO A HELP TOOLTIP */}\n        <Paragraph>\n          Adjust the savings and retirement rate sliders to change what percentage\n          of your total earnings you expect to allocate.\n        </Paragraph>\n        <SliderLayout sliderProperties={[{\n          title: 'Savings Rate',\n          min: 0,\n          max: 100,\n          value: `${numberWithCommas(savingsPercentage)}%`,\n          updateValue: updateSavingsPercentage,\n          sliderColor: savingsColor,\n          defaultValue: savingsPercentage,\n        }, {\n          title: 'Retirement Rate',\n          min: 0,\n          max: 10,\n          value: `${numberWithCommas(retirementPercentage)}%`,\n          updateValue: updateRetirementPercentage,\n          sliderColor: retirementColor,\n          defaultValue: retirementPercentage,\n        },\n        ]}\n        />\n      </Card>\n      <Button type='primary' style={{ background: 'red', borderColor: 'red' }}>\n        Delete\n      </Button>\n      <Button type='primary' style={{ background: 'grey', borderColor: 'grey' }}>\n        Edit\n      </Button>\n      <Button type='primary' htmlType='submit' style={{ background: 'grey', borderColor: 'grey' }}>\n        Submit\n      </Button>\n    </>\n  );\n};\n\nexport default CompensationConfiguration;\n"]},"metadata":{},"sourceType":"module"}