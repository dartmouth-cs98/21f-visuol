{"ast":null,"code":"import axios from 'axios';\nexport const BASE_URL = 'http://localhost:5000/'; // Calls the backend api and receives the offer\n\nexport const getOffer = async data => {\n  const tokenString = localStorage.getItem('token');\n  const config = {\n    Authorization: tokenString\n  };\n  const offer = await axios.get(`${BASE_URL}api_v1/users_offers`, data, {\n    headers: config\n  }).then(response => response.data);\n  return offer;\n}; // Calls the backend api to post the offer in the database\n\nexport function postOffer(offer) {\n  const data = Object.assign(offer);\n  data.base = Number.parseInt(offer.base, 10);\n  data.bonus = Number.parseInt(offer.bonus, 10);\n  data.matchPercentage = Number.parseInt(offer.matchPercentage, 10);\n  data.stocks = Number.parseInt(offer.stocks, 10);\n  data.PTO = Number.parseInt(offer.PTO, 10);\n  const tokenString = localStorage.getItem('token');\n  const headers = {\n    Authorization: tokenString // 'Access-Control-Allow-Origin': 'http://localhost:3000'\n\n  };\n  console.log('createOfferData', data);\n  axios.post(`${BASE_URL}api_v1/create_offer`, offer, {\n    headers\n  }).then(response => {\n    console.log('submitted', response);\n    return response;\n  });\n} // retrieves a list of all the offers that a user has\n\nexport const myOffers = async () => {\n  const tokenString = localStorage.getItem('token');\n  const config = {\n    Authorization: tokenString\n  };\n  const offers = await axios.get(`${BASE_URL}api_v1/users_offers`, {\n    headers: config\n  }).then(response => response.data);\n  return offers;\n};\nexport const removeOffer = async id => {\n  const tokenString = localStorage.getItem('token');\n  const headers = {\n    Authorization: tokenString\n  };\n  console.log(tokenString);\n  console.log(headers);\n  const result = await axios.delete(`${BASE_URL}api_v1/remove_offer`, {\n    headers: headers\n  });\n  return result;\n};","map":{"version":3,"sources":["/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/OfferAPI.js"],"names":["axios","BASE_URL","getOffer","data","tokenString","localStorage","getItem","config","Authorization","offer","get","headers","then","response","postOffer","Object","assign","base","Number","parseInt","bonus","matchPercentage","stocks","PTO","console","log","post","myOffers","offers","removeOffer","id","result","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const BASE_URL = 'http://localhost:5000/';\n\n// Calls the backend api and receives the offer\nexport const getOffer = async (data) => {\n  const tokenString = localStorage.getItem('token');\n\n  const config = {\n    Authorization: tokenString,\n  };\n\n  const offer = await axios.get(`${BASE_URL}api_v1/users_offers`, data, { headers: config })\n    .then((response) => response.data);\n\n  return offer;\n};\n\n// Calls the backend api to post the offer in the database\nexport function postOffer(offer) {\n  const data = Object.assign(offer);\n  data.base = Number.parseInt(offer.base, 10);\n  data.bonus = Number.parseInt(offer.bonus, 10);\n  data.matchPercentage = Number.parseInt(offer.matchPercentage, 10);\n  data.stocks = Number.parseInt(offer.stocks, 10);\n  data.PTO = Number.parseInt(offer.PTO, 10);\n  const tokenString = localStorage.getItem('token');\n  const headers = {\n    Authorization: tokenString,\n    // 'Access-Control-Allow-Origin': 'http://localhost:3000'\n  };\n\n  console.log('createOfferData', data);\n\n  axios.post(`${BASE_URL}api_v1/create_offer`, offer, {\n    headers,\n  })\n    .then((response) => {\n      console.log('submitted', response);\n      return response;\n    });\n}\n\n// retrieves a list of all the offers that a user has\nexport const myOffers = async () => {\n  const tokenString = localStorage.getItem('token');\n\n  const config = {\n    Authorization: tokenString,\n  };\n\n  const offers = await axios.get(`${BASE_URL}api_v1/users_offers`, { headers: config })\n    .then((response) => response.data);\n\n  return offers;\n};\n\nexport const removeOffer = async (id) => {\n  const tokenString = localStorage.getItem('token')\n\n  const headers = {\n    Authorization: tokenString,\n  };\n  console.log(tokenString);\n  console.log(headers);\n\n  const result = await axios.delete(`${BASE_URL}api_v1/remove_offer`, { headers: headers},\n    );\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}