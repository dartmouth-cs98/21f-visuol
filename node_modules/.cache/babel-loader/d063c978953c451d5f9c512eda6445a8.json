{"ast":null,"code":"var _jsxFileName = \"/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/Registration.jsx\";\n// Credit to https://ant.design/components/form/\n// Component for logging in\nimport { Form, Input, Button, Switch, notification } from 'antd';\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.finishRegistration = () => {\n      // (response) => {\n      const {\n        history\n      } = this.props;\n      console.log('Success!');\n      history.push('/login'); // TODO: better convey that registration succeeded (alert?)\n    };\n\n    this.onFinish = values => {\n      const {\n        displayCompanyForm\n      } = this.state;\n      const info = {\n        name: values.name,\n        email: values.email,\n        password: values.password,\n        company: displayCompanyForm ? values.company : null\n      };\n      axios.post('http://localhost:5000/api_v1/register_user', info).then(response => {\n        console.log(response);\n\n        if (response.data && response.data.status === 'success') {\n          this.finishRegistration(response);\n        } else if (response.data) {\n          notification.open({\n            message: 'Message',\n            description: response.data.error,\n            onClick: () => {}\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onFinishFailed = errorInfo => {\n      console.log('Failed:', errorInfo);\n    };\n\n    this.onClickSwitch = () => {\n      this.setState(state => ({\n        displayCompanyForm: !state.displayCompanyForm\n      }));\n    };\n\n    this.state = {\n      displayCompanyForm: false\n    };\n  } // OnFinish dictates what happens when submitting a form object\n\n\n  render() {\n    const {\n      displayCompanyForm\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 10\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: 'Please input your full name (First and last)'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          message: 'Please input your email!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 4,\n          span: 2\n        },\n        label: \"Company Account\",\n        valuePropName: \"checked\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          onClick: this.onClickSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Company Name\",\n        name: \"company\",\n        rules: [{\n          required: displayCompanyForm,\n          message: 'Please input your company name'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          disabled: !displayCompanyForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 12,\n          span: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          style: {\n            background: 'grey',\n            borderColor: 'grey'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Registration);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/Registration.jsx"],"names":["Form","Input","Button","Switch","notification","React","Component","axios","withRouter","Registration","constructor","props","finishRegistration","history","console","log","push","onFinish","values","displayCompanyForm","state","info","name","email","password","company","post","then","response","data","status","open","message","description","error","onClick","catch","onFinishFailed","errorInfo","onClickSwitch","setState","render","span","remember","required","offset","background","borderColor"],"mappings":"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","sourcesContent":["// Credit to https://ant.design/components/form/\n// Component for logging in\nimport {\n  Form, Input, Button, Switch, notification,\n} from 'antd';\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayCompanyForm: false,\n    };\n  }\n\n  // OnFinish dictates what happens when submitting a form object\n  finishRegistration = () => { // (response) => {\n    const { history } = this.props;\n    console.log('Success!');\n    history.push('/login'); // TODO: better convey that registration succeeded (alert?)\n  }\n\n  // OnFinish dictates what happens when submitting a form object\n  onFinish = (values) => {\n    const { displayCompanyForm } = this.state;\n\n    const info = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n      company: (displayCompanyForm) ? values.company : null,\n    };\n    axios.post('http://localhost:5000/api_v1/register_user', info).then((response) => {\n      console.log(response);\n      if (response.data && response.data.status === 'success') {\n        this.finishRegistration(response);\n      } else if (response.data) {\n        notification.open({\n          message: 'Message',\n          description:\n            response.data.error,\n          onClick: () => {},\n        });\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  onClickSwitch = () => {\n    this.setState((state) => ({ displayCompanyForm: !state.displayCompanyForm }));\n  };\n\n  render() {\n    const { displayCompanyForm } = this.state;\n\n    return (\n      <Form\n        name=\"basic\"\n        labelCol={{\n          span: 8,\n        }}\n        wrapperCol={{\n          span: 10,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={this.onFinish}\n        onFinishFailed={this.onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label=\"Name\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your full name (First and last)',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your email!',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your password!',\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          wrapperCol={{\n            offset: 4,\n            span: 2,\n          }}\n          label=\"Company Account\"\n          valuePropName=\"checked\"\n        >\n          <Switch onClick={this.onClickSwitch} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Company Name\"\n          name=\"company\"\n          rules={[\n            {\n              required: displayCompanyForm,\n              message: 'Please input your company name',\n            },\n          ]}\n        >\n          <Input disabled={!displayCompanyForm} />\n        </Form.Item>\n\n        <Form.Item\n          wrapperCol={{\n            offset: 12,\n            span: 10,\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\" style={{ background: 'grey', borderColor: 'grey' }}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default withRouter(Registration);\n"]},"metadata":{},"sourceType":"module"}