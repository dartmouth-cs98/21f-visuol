{"ast":null,"code":"import _classCallCheck from\"/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Area,LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ComposedChart}from'recharts';import React,{PureComponent}from'react';import numberWithCommas from'../../tools/numbersWithCommas';// We look at total compensation through the following funnel, Start with Total Compensation,\n// Subtract out amount intended for retirement savings (currently we assume this is out of the\n// untaxed but this is not necessarily the case), then take out taxes, then from that remaining\n// amount, we get spend vs savings. Savings are computed as a savings percentage of post tax\n// post retirement money\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var DataTransform=function DataTransform(compData,baseGrowth,bonusGrowth,savingsPercentage,retirementSavingsPercentage,years){var res=[];var pastSavings=0;var pastCompensation=0;var pastTaxes=0;var nonSavings=0;var retirementSavings=0;var base=compData.base,bonus=compData.bonus,federalTax=compData.federalTax,stateTax=compData.stateTax;for(var i=0;i<years;i+=1){var data={};// Basic Data\ndata.Year=i;data.Base=Math.round(base*Math.pow(1+baseGrowth/100,i));data.Bonus=Math.round(bonus*Math.pow(1+bonusGrowth/100,i));data.Total=data.Base+data.Bonus;// Calculating Tax and Post Tax Compensation\ndata.Tax=data.Total*(Number.parseFloat(federalTax)+Number.parseFloat(stateTax));data.PostTaxCompensation=data.Total-data.Tax;// Update accumulated variables\npastCompensation+=data.Total;data.TotalAccumulatedCompensation=pastCompensation;var retirementSavingsDollars=data.Total*(retirementSavingsPercentage/100);retirementSavings+=retirementSavingsDollars;data.RetirementSavings=Math.round(retirementSavings);pastTaxes+=Math.round(data.Tax);data.TotalPaidInTaxes=pastTaxes;var savingsDollars=(data.PostTaxCompensation-retirementSavingsDollars)*(savingsPercentage/100);pastSavings+=savingsDollars;data.Savings=Math.round(pastSavings);nonSavings+=data.PostTaxCompensation-retirementSavingsDollars-savingsDollars;data.Spending=Math.round(nonSavings);res.push(data);}return res;};export var YearlyCompensation=function YearlyCompensation(props){var data=props.data,baseColor=props.baseColor,bonusColor=props.bonusColor;return/*#__PURE__*/_jsxs(LineChart,{width:730,height:500,data:data,margin:{top:20,right:30,left:20,bottom:10},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"Year\",height:60,tick:/*#__PURE__*/_jsx(CustomizedAxisTick,{})}),/*#__PURE__*/_jsx(YAxis,{tickFormatter:function tickFormatter(value){return new Intl.NumberFormat('en').format(value);}}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"Base\",stroke:baseColor,label:/*#__PURE__*/_jsx(CustomizedLabel,{})}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"Bonus\",stroke:bonusColor,label:/*#__PURE__*/_jsx(CustomizedLabel,{})}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"Total\",stroke:\"#cc3300\",label:/*#__PURE__*/_jsx(CustomizedLabel,{})}),/*#__PURE__*/_jsx(Tooltip,{content:/*#__PURE__*/_jsx(CustomTooltipCompensation,{})}),/*#__PURE__*/_jsx(Legend,{})]});};// TODO: Update Tooltips\nexport var YearlySavings=function YearlySavings(props){var data=props.data,savingsColor=props.savingsColor,retirementColor=props.retirementColor,spendingColor=props.spendingColor;return/*#__PURE__*/_jsxs(ComposedChart,{width:730,height:500,data:data,margin:{top:20,right:30,left:20,bottom:10},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"Year\",height:60,tick:/*#__PURE__*/_jsx(CustomizedAxisTick,{})}),/*#__PURE__*/_jsx(YAxis,{tickFormatter:function tickFormatter(value){return new Intl.NumberFormat('en').format(value);}}),/*#__PURE__*/_jsx(Tooltip,{content:/*#__PURE__*/_jsx(CustomTooltipSavings,{})}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"TotalAccumulatedCompensation\",stroke:\"#cc3300\",fill:\"#cc3300\"}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"TotalPaidInTaxes\",stackId:\"1\",stroke:\"#6196E5\",fill:\"#6196E5\"}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"Savings\",stackId:\"1\",stroke:savingsColor,fill:savingsColor}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"RetirementSavings\",stackId:\"1\",stroke:retirementColor,fill:retirementColor}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"Spending\",stackId:\"1\",stroke:spendingColor,fill:spendingColor}),/*#__PURE__*/_jsx(Legend,{})]});};var tooltipStyle={backgroundColor:'#F0F2F5',opacity:0.70,borderStyle:'solid',borderRadius:'1px',borderColor:'#dedfe2',fontSize:'12px'};// TODO: Fix hardcoding of tooltips add CSS styling in boxes and font\nvar CustomTooltipCompensation=function CustomTooltipCompensation(_ref){var active=_ref.active,payload=_ref.payload,label=_ref.label;if(active&&payload&&payload.length){return/*#__PURE__*/_jsxs(\"div\",{className:\"tooltip\",style:tooltipStyle,children:[/*#__PURE__*/_jsx(\"p\",{className:\"label\",children:\"Year \".concat(label)}),/*#__PURE__*/_jsx(\"p\",{className:payload[0].name,children:\"\".concat(payload[0].name,\" : \").concat(numberWithCommas(payload[0].value))}),/*#__PURE__*/_jsx(\"p\",{className:payload[1].name,children:\"\".concat(payload[1].name,\" : \").concat(numberWithCommas(payload[1].value))}),/*#__PURE__*/_jsx(\"p\",{className:payload[2].name,children:\"\".concat(payload[2].name,\" : \").concat(numberWithCommas(payload[2].value))})]});}return null;};var CustomTooltipSavings=function CustomTooltipSavings(_ref2){var active=_ref2.active,payload=_ref2.payload,label=_ref2.label;if(active&&payload&&payload.length){return/*#__PURE__*/_jsxs(\"div\",{className:\"tooltip\",style:tooltipStyle,children:[/*#__PURE__*/_jsx(\"p\",{className:\"label\",children:\"Year \".concat(label)}),/*#__PURE__*/_jsx(\"p\",{className:payload[0].name,children:\"\".concat(payload[0].name,\" : \").concat(numberWithCommas(payload[0].value))}),/*#__PURE__*/_jsx(\"p\",{className:payload[1].name,children:\"\".concat(payload[1].name,\" : \").concat(numberWithCommas(payload[1].value))}),/*#__PURE__*/_jsx(\"p\",{className:payload[2].name,children:\"\".concat(payload[2].name,\" : \").concat(numberWithCommas(payload[2].value))}),/*#__PURE__*/_jsx(\"p\",{className:payload[3].name,children:\"\".concat(payload[3].name,\" : \").concat(numberWithCommas(payload[3].value))}),/*#__PURE__*/_jsx(\"p\",{className:payload[4].name,children:\"\".concat(payload[4].name,\" : \").concat(numberWithCommas(payload[4].value))})]});}return null;};var CustomizedLabel=/*#__PURE__*/function(_PureComponent){_inherits(CustomizedLabel,_PureComponent);var _super=_createSuper(CustomizedLabel);function CustomizedLabel(){_classCallCheck(this,CustomizedLabel);return _super.apply(this,arguments);}_createClass(CustomizedLabel,[{key:\"render\",value:function render(){var _this$props=this.props,x=_this$props.x,y=_this$props.y,stroke=_this$props.stroke,value=_this$props.value;return/*#__PURE__*/_jsx(\"text\",{x:x,y:y,dy:-4,fill:stroke,fontSize:10,textAnchor:\"middle\",children:numberWithCommas(value)});}}]);return CustomizedLabel;}(PureComponent);var CustomizedAxisTick=/*#__PURE__*/function(_PureComponent2){_inherits(CustomizedAxisTick,_PureComponent2);var _super2=_createSuper(CustomizedAxisTick);function CustomizedAxisTick(){_classCallCheck(this,CustomizedAxisTick);return _super2.apply(this,arguments);}_createClass(CustomizedAxisTick,[{key:\"render\",value:function render(){var _this$props2=this.props,x=_this$props2.x,y=_this$props2.y,payload=_this$props2.payload;return/*#__PURE__*/_jsx(\"g\",{transform:\"translate(\".concat(x,\",\").concat(y,\")\"),children:/*#__PURE__*/_jsx(\"text\",{x:0,y:0,dy:16,textAnchor:\"end\",fill:\"#666\",transform:\"rotate(0)\",children:\"Year \".concat(payload.value)})});}}]);return CustomizedAxisTick;}(PureComponent);","map":{"version":3,"sources":["/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/components/compensation/Graphs.jsx"],"names":["Area","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ComposedChart","React","PureComponent","numberWithCommas","DataTransform","compData","baseGrowth","bonusGrowth","savingsPercentage","retirementSavingsPercentage","years","res","pastSavings","pastCompensation","pastTaxes","nonSavings","retirementSavings","base","bonus","federalTax","stateTax","i","data","Year","Base","Math","round","Bonus","Total","Tax","Number","parseFloat","PostTaxCompensation","TotalAccumulatedCompensation","retirementSavingsDollars","RetirementSavings","TotalPaidInTaxes","savingsDollars","Savings","Spending","push","YearlyCompensation","props","baseColor","bonusColor","top","right","left","bottom","value","Intl","NumberFormat","format","YearlySavings","savingsColor","retirementColor","spendingColor","tooltipStyle","backgroundColor","opacity","borderStyle","borderRadius","borderColor","fontSize","CustomTooltipCompensation","active","payload","label","length","name","CustomTooltipSavings","CustomizedLabel","x","y","stroke","CustomizedAxisTick"],"mappings":"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","sourcesContent":["import {\n  Area,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ComposedChart,\n} from 'recharts';\nimport React, { PureComponent } from 'react';\nimport numberWithCommas from '../../tools/numbersWithCommas';\n\n// We look at total compensation through the following funnel, Start with Total Compensation,\n// Subtract out amount intended for retirement savings (currently we assume this is out of the\n// untaxed but this is not necessarily the case), then take out taxes, then from that remaining\n// amount, we get spend vs savings. Savings are computed as a savings percentage of post tax\n// post retirement money\nexport const DataTransform = (compData, baseGrowth,\n  bonusGrowth, savingsPercentage, retirementSavingsPercentage, years) => {\n  const res = [];\n  let pastSavings = 0;\n  let pastCompensation = 0;\n  let pastTaxes = 0;\n  let nonSavings = 0;\n  let retirementSavings = 0;\n  const {\n    base, bonus, federalTax, stateTax,\n  } = compData;\n  for (let i = 0; i < years; i += 1) {\n    const data = {};\n    // Basic Data\n    data.Year = i;\n    data.Base = Math.round((base * ((1 + (baseGrowth) / 100) ** i)));\n    data.Bonus = Math.round(bonus * ((1 + (bonusGrowth) / 100) ** i));\n    data.Total = data.Base + data.Bonus;\n    // Calculating Tax and Post Tax Compensation\n    data.Tax = data.Total * (Number.parseFloat(federalTax) + Number.parseFloat(stateTax));\n    data.PostTaxCompensation = data.Total - data.Tax;\n    // Update accumulated variables\n    pastCompensation += data.Total;\n    data.TotalAccumulatedCompensation = pastCompensation;\n    const retirementSavingsDollars = data.Total * (retirementSavingsPercentage / 100);\n    retirementSavings += retirementSavingsDollars;\n    data.RetirementSavings = Math.round(retirementSavings);\n    pastTaxes += Math.round(data.Tax);\n    data.TotalPaidInTaxes = pastTaxes;\n    const savingsDollars = (data.PostTaxCompensation - retirementSavingsDollars)\n      * (savingsPercentage / 100);\n    pastSavings += savingsDollars;\n    data.Savings = Math.round(pastSavings);\n    nonSavings += data.PostTaxCompensation - retirementSavingsDollars\n      - savingsDollars;\n    data.Spending = Math.round(nonSavings);\n    res.push(data);\n  }\n  return res;\n};\n\nexport const YearlyCompensation = (props) => {\n  const { data, baseColor, bonusColor } = props;\n  return (\n    <LineChart\n      width={730}\n      height={500}\n      data={data}\n      margin={{\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 10,\n      }}\n    >\n      <CartesianGrid strokeDasharray='3 3' />\n      <XAxis dataKey='Year' height={60} tick={<CustomizedAxisTick />} />\n      <YAxis tickFormatter={(value) => new Intl.NumberFormat('en').format(value)} />\n      <Line type='monotone' dataKey='Base' stroke={baseColor} label={<CustomizedLabel />} />\n      <Line type='monotone' dataKey='Bonus' stroke={bonusColor} label={<CustomizedLabel />} />\n      <Line type='monotone' dataKey='Total' stroke='#cc3300' label={<CustomizedLabel />} />\n      <Tooltip content={<CustomTooltipCompensation />} />\n      <Legend />\n    </LineChart>\n  );\n};\n// TODO: Update Tooltips\nexport const YearlySavings = (props) => {\n  const {\n    data, savingsColor, retirementColor, spendingColor,\n  } = props;\n  return (\n    <ComposedChart\n      width={730}\n      height={500}\n      data={data}\n      margin={{\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 10,\n      }}\n    >\n      <CartesianGrid strokeDasharray='3 3' />\n      <XAxis dataKey='Year' height={60} tick={<CustomizedAxisTick />} />\n      <YAxis tickFormatter={(value) => new Intl.NumberFormat('en').format(value)} />\n      <Tooltip content={<CustomTooltipSavings />} />\n      <Line type='monotone' dataKey='TotalAccumulatedCompensation' stroke='#cc3300' fill='#cc3300' />\n      <Area type='monotone' dataKey='TotalPaidInTaxes' stackId='1' stroke='#6196E5' fill='#6196E5' />\n      <Area type='monotone' dataKey='Savings' stackId='1' stroke={savingsColor} fill={savingsColor} />\n      <Area type='monotone' dataKey='RetirementSavings' stackId='1' stroke={retirementColor} fill={retirementColor} />\n      <Area type='monotone' dataKey='Spending' stackId='1' stroke={spendingColor} fill={spendingColor} />\n      <Legend />\n    </ComposedChart>\n  );\n};\n\nconst tooltipStyle = {\n  backgroundColor: '#F0F2F5',\n  opacity: 0.70,\n  borderStyle: 'solid',\n  borderRadius: '1px',\n  borderColor: '#dedfe2',\n  fontSize: '12px',\n};\n\n// TODO: Fix hardcoding of tooltips add CSS styling in boxes and font\nconst CustomTooltipCompensation = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className='tooltip' style={tooltipStyle}>\n        <p className='label'>{`Year ${label}`}</p>\n        <p className={payload[0].name}>{`${payload[0].name} : ${numberWithCommas(payload[0].value)}`}</p>\n        <p className={payload[1].name}>{`${payload[1].name} : ${numberWithCommas(payload[1].value)}`}</p>\n        <p className={payload[2].name}>{`${payload[2].name} : ${numberWithCommas(payload[2].value)}`}</p>\n      </div>\n    );\n  }\n  return null;\n};\n\nconst CustomTooltipSavings = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className='tooltip' style={tooltipStyle}>\n        <p className='label'>{`Year ${label}`}</p>\n        <p className={payload[0].name}>{`${payload[0].name} : ${numberWithCommas(payload[0].value)}`}</p>\n        <p className={payload[1].name}>{`${payload[1].name} : ${numberWithCommas(payload[1].value)}`}</p>\n        <p className={payload[2].name}>{`${payload[2].name} : ${numberWithCommas(payload[2].value)}`}</p>\n        <p className={payload[3].name}>{`${payload[3].name} : ${numberWithCommas(payload[3].value)}`}</p>\n        <p className={payload[4].name}>{`${payload[4].name} : ${numberWithCommas(payload[4].value)}`}</p>\n      </div>\n    );\n  }\n  return null;\n};\n\nclass CustomizedLabel extends PureComponent {\n  render() {\n    const {\n      x, y, stroke, value,\n    } = this.props;\n\n    return (\n      <text x={x} y={y} dy={-4} fill={stroke} fontSize={10} textAnchor='middle'>\n        {numberWithCommas(value)}\n      </text>\n    );\n  }\n}\n\nclass CustomizedAxisTick extends PureComponent {\n  render() {\n    const {\n      x, y, payload,\n    } = this.props;\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text x={0} y={0} dy={16} textAnchor='end' fill='#666' transform='rotate(0)'>\n          {`Year ${payload.value}`}\n        </text>\n      </g>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}