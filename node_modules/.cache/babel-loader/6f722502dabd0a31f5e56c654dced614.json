{"ast":null,"code":"var _jsxFileName = \"/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/Registration.js\";\n//Credit to https://ant.design/components/form/\n//Component for logging in\nimport { Form, Input, Button, Switch } from 'antd';\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.finishRegistration = response => {\n      console.log('Success!');\n      this.props.history.push(\"/login\"); //TODO: better convey that registration succeeded (alert?)\n    };\n\n    this.onFinish = values => {\n      const info = {\n        name: values.name,\n        email: values.email,\n        password: values.password,\n        company: this.state.displayCompanyForm ? values.company : null\n      };\n      axios.post('http://localhost:5000/api_v1/register_user', info).then(response => {\n        console.log(response);\n        this.finishRegistration(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.onFinishFailed = errorInfo => {\n      console.log('Failed:', errorInfo);\n    };\n\n    this.onClickSwitch = () => {\n      this.setState(state => {\n        return {\n          displayCompanyForm: !state.displayCompanyForm\n        };\n      });\n    };\n\n    this.state = {\n      displayCompanyForm: false\n    };\n  } //OnFinish dictates what happens when submitting a form object\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 10\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: 'Please input your full name (First and last)'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          message: 'Please input your email!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Company Account\",\n        valuePropName: \"checked\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          onClick: this.onClickSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Company Name\",\n        name: \"company\",\n        rules: [{\n          required: this.state.displayCompanyForm,\n          message: 'Please input your company name'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          disabled: !this.state.displayCompanyForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default _c = withRouter(Registration);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/Registration.js"],"names":["Form","Input","Button","Switch","React","Component","axios","withRouter","Registration","constructor","props","finishRegistration","response","console","log","history","push","onFinish","values","info","name","email","password","company","state","displayCompanyForm","post","then","catch","error","onFinishFailed","errorInfo","onClickSwitch","setState","render","span","remember","required","message","offset"],"mappings":"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","sourcesContent":["//Credit to https://ant.design/components/form/\n//Component for logging in\nimport { Form, Input, Button, Switch} from 'antd';\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nclass Registration extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      displayCompanyForm : false,\n    }\n  }\n\n  //OnFinish dictates what happens when submitting a form object\n  finishRegistration = (response) => {\n    console.log('Success!');\n    this.props.history.push(\"/login\"); //TODO: better convey that registration succeeded (alert?)\n  }\n\n  //OnFinish dictates what happens when submitting a form object\n  onFinish = (values) => {\n    const info = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n      company: (this.state.displayCompanyForm) ? values.company : null,\n    }\n    axios.post('http://localhost:5000/api_v1/register_user', info).then((response) =>\n      {\n        console.log(response);\n        this.finishRegistration(response);\n      }).catch(function(error){\n        console.log(error);\n      });\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  onClickSwitch = () => {\n    this.setState((state) => {\n      return {displayCompanyForm: !state.displayCompanyForm};\n    });\n  };\n\n  render() {\n    return ( \n      <Form\n        name=\"basic\"\n        labelCol={{\n          span: 8,\n        }}\n        wrapperCol={{\n          span: 10,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={this.onFinish}\n        onFinishFailed={this.onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label=\"Name\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your full name (First and last)',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your email!',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your password!',\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item label=\"Company Account\" valuePropName=\"checked\">\n          <Switch onClick={this.onClickSwitch}/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"Company Name\"\n          name=\"company\"\n          rules={[\n            {\n              required: this.state.displayCompanyForm,\n              message: 'Please input your company name',\n            },\n          ]}\n        >\n          <Input disabled={!this.state.displayCompanyForm} />\n        </Form.Item>\n\n        <Form.Item\n          wrapperCol={{\n            offset: 8,\n            span: 10,\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n};\n\nexport default withRouter(Registration);\n"]},"metadata":{},"sourceType":"module"}