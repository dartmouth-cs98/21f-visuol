{"ast":null,"code":"var _jsxFileName = \"/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/components/comparison/ComparisonLayout.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Select } from 'antd';\nimport { myOffers } from '../../OfferAPI';\nimport CompensationLayout from '../compensation/compensation-layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst ComparisonLayout = () => {\n  _s();\n\n  const [constructed, setConstructed] = useState(false); // so we don't fetch data multiple times\n\n  const [offers, setOffers] = useState([]);\n  const [offer1, setOffer1] = useState(null);\n  const [offer2, setOffer2] = useState(null);\n\n  if (!constructed) {\n    myOffers().then(response => {\n      // eslint-disable-next-line no-underscore-dangle\n      setOffers(response.map(offerObj => ({ ...offerObj,\n        id: offerObj._id\n      })));\n    });\n    setConstructed(true);\n  } // offer selection\n  // offer display\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      justify: \"space-around\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Company 1\",\n          onChange: choice => {\n            const match = offers.find(offer => choice === offer.company);\n            console.log(match);\n            setOffer1(match);\n          },\n          children: offers.map(offer => /*#__PURE__*/_jsxDEV(Option, {\n            value: offer.company,\n            children: offer.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Company 2\",\n          onChange: choice => {\n            const match = offers.find(offer => choice === offer.company);\n            console.log(match);\n            setOffer2(match);\n          },\n          children: offers.map(offer => /*#__PURE__*/_jsxDEV(Option, {\n            value: offer.company,\n            children: offer.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          width: '50%'\n        },\n        children: offer1 ? /*#__PURE__*/_jsxDEV(CompensationLayout, {\n          offer: offer1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          width: '50%'\n        },\n        children: offer2 ? /*#__PURE__*/_jsxDEV(CompensationLayout, {\n          offer: offer2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ComparisonLayout, \"eSEtAAskjrDYACb1UXbFfKf+tcg=\");\n\n_c = ComparisonLayout;\nexport default ComparisonLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComparisonLayout\");","map":{"version":3,"sources":["/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/components/comparison/ComparisonLayout.jsx"],"names":["React","useState","useEffect","Row","Col","Select","myOffers","CompensationLayout","Option","ComparisonLayout","constructed","setConstructed","offers","setOffers","offer1","setOffer1","offer2","setOffer2","then","response","map","offerObj","id","_id","choice","match","find","offer","company","console","log","width"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Select } from 'antd';\nimport { myOffers } from '../../OfferAPI';\nimport CompensationLayout from '../compensation/compensation-layout';\n\nconst { Option } = Select;\n\nconst ComparisonLayout = () => {\n  const [constructed, setConstructed] = useState(false); // so we don't fetch data multiple times\n  const [offers, setOffers] = useState([]);\n  const [offer1, setOffer1] = useState(null);\n  const [offer2, setOffer2] = useState(null);\n  if (!constructed) {\n    myOffers().then((response) => {\n      // eslint-disable-next-line no-underscore-dangle\n      setOffers(response.map((offerObj) => ({ ...offerObj, id: offerObj._id })));\n    });\n    setConstructed(true);\n  }\n  // offer selection\n  // offer display\n  return (\n    <>\n      <Row justify='space-around'>\n        <Col>\n          <Select\n            placeholder='Company 1'\n            onChange={(choice) => {\n              const match = offers.find((offer) => choice === offer.company);\n              console.log(match);\n              setOffer1(match);\n            }}\n          >\n            {offers.map((offer) => (<Option value={offer.company}>{offer.company}</Option>))}\n          </Select>\n        </Col>\n        <Col>\n          <Select\n            placeholder='Company 2'\n            onChange={(choice) => {\n              const match = offers.find((offer) => choice === offer.company);\n              console.log(match);\n              setOffer2(match);\n            }}\n          >\n            {offers.map((offer) => (<Option value={offer.company}>{offer.company}</Option>))}\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col style={{ width: '50%' }}>\n          {offer1 ? (\n            <CompensationLayout\n              offer={offer1}\n            />\n          ) : null }\n        </Col>\n        <Col style={{ width: '50%' }}>\n          {offer2 ? (\n            <CompensationLayout\n              offer={offer2}\n            />\n          ) : null }\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ComparisonLayout;\n"]},"metadata":{},"sourceType":"module"}