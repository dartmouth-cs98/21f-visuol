{"ast":null,"code":"var _jsxFileName = \"/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/Login.jsx\";\n// Credit to https://ant.design/components/form/\n// Component for logging in\nimport { Form, Input, Button, notification } from 'antd';\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.finishLogin = response => {\n      localStorage.setItem('token', response.data.session_token);\n      localStorage.setItem('expiration', response.data.expiration);\n      const {\n        history\n      } = this.props;\n      history.push('/');\n      window.location.reload();\n    };\n\n    this.onFinish = values => {\n      axios.post('http://localhost:5000/api_v1/login', values).then(response => {\n        if (response.data && response.data.status === 'success') {\n          this.finishLogin(response);\n        } else if (response.data) {\n          notification.open({\n            message: 'Message',\n            description: response.data.error,\n            onClick: () => {}\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onFinishFailed = errorInfo => {\n      console.log('Failed:', errorInfo);\n    };\n\n    this.state = {// sessionToken: '',\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 10\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          message: 'Please input your email!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 12,\n          span: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          style: {\n            background: 'grey',\n            borderColor: 'grey'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/jamesverschleiser/VisuOL/21f-visuol/visuol/src/Login.jsx"],"names":["Form","Input","Button","notification","React","Component","axios","withRouter","Login","constructor","props","finishLogin","response","localStorage","setItem","data","session_token","expiration","history","push","window","location","reload","onFinish","values","post","then","status","open","message","description","error","onClick","catch","console","log","onFinishFailed","errorInfo","state","render","span","remember","required","offset","background","borderColor"],"mappings":"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","sourcesContent":["// Credit to https://ant.design/components/form/\n// Component for logging in\nimport {\n  Form, Input, Button, notification,\n} from 'antd';\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // sessionToken: '',\n    };\n  }\n\n  finishLogin = (response) => {\n    localStorage.setItem('token', response.data.session_token);\n    localStorage.setItem('expiration', response.data.expiration);\n\n    const { history } = this.props;\n    history.push('/');\n    window.location.reload();\n  }\n\n  onFinish = (values) => {\n    axios.post('http://localhost:5000/api_v1/login', values).then((response) => {\n      if (response.data && response.data.status === 'success') {\n        this.finishLogin(response);\n      } else if (response.data) {\n        notification.open({\n          message: 'Message',\n          description:\n            response.data.error,\n          onClick: () => {},\n        });\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n\n   onFinishFailed = (errorInfo) => {\n     console.log('Failed:', errorInfo);\n   };\n\n   render() {\n     return (\n       <Form\n         name='basic'\n         labelCol={{\n           span: 8,\n         }}\n         wrapperCol={{\n           span: 10,\n         }}\n         initialValues={{\n           remember: true,\n         }}\n         onFinish={this.onFinish}\n         onFinishFailed={this.onFinishFailed}\n         autoComplete='off'\n       >\n         <Form.Item\n           label='Email'\n           name='email'\n           rules={[\n             {\n               required: true,\n               message: 'Please input your email!',\n             },\n           ]}\n         >\n           <Input />\n         </Form.Item>\n\n         <Form.Item\n           label='Password'\n           name='password'\n           rules={[\n             {\n               required: true,\n               message: 'Please input your password!',\n             },\n           ]}\n         >\n           <Input.Password />\n         </Form.Item>\n\n         <Form.Item\n           wrapperCol={{\n             offset: 12,\n             span: 10,\n           }}\n         >\n           <Button type='primary' htmlType='submit' style={{ background: 'grey', borderColor: 'grey' }}>\n             Submit\n           </Button>\n         </Form.Item>\n       </Form>\n     );\n   }\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}